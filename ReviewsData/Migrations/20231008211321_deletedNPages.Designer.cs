// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReviewsData;

#nullable disable

namespace ReviewsData.Migrations
{
    [DbContext(typeof(ReviewsDbContext))]
    [Migration("20231008211321_deletedNPages")]
    partial class deletedNPages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReviewsData.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "хохол",
                            Rating = 7m,
                            Title = "Мойдодыр"
                        },
                        new
                        {
                            Id = 2,
                            Description = "АБВГД",
                            Rating = 5m,
                            Title = "Азбука"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Аннотация – краткое описание книги, которое дает читателю представление о произведении, рассказывает завязку сюжета или обозначает общую тему книги. Обычно аннотация публикуется на обороте книги.",
                            Rating = 2m,
                            Title = "Дихотомия добра и зла"
                        });
                });

            modelBuilder.Entity("ReviewsData.Model.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dufresne",
                            Rating = 9.5m,
                            Title = "Побег из Шоушенка"
                        },
                        new
                        {
                            Id = 2,
                            Description = "1+1",
                            Rating = 9.1m,
                            Title = "Untouchebles"
                        },
                        new
                        {
                            Id = 3,
                            Description = "ты задержан или просто глупый?",
                            Rating = 9.4m,
                            Title = "Форрест Гамп"
                        });
                });

            modelBuilder.Entity("ReviewsData.Model.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Клац клац",
                            Rating = 8m,
                            Title = "Дота 2"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Есть пробитие",
                            Rating = 5m,
                            Title = "Танки"
                        },
                        new
                        {
                            Id = 3,
                            Description = "AWP",
                            Rating = 6m,
                            Title = "КС"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
